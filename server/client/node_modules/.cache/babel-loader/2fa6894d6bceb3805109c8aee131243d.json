{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _constants = require('./constants');\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar Renderer = function () {\n  function Renderer(options) {\n    _classCallCheck(this, Renderer);\n\n    this.options = _extends({\n      linkify: false\n    }, options);\n    this.contexts = [];\n  }\n\n  _createClass(Renderer, [{\n    key: 'context',\n    value: function context(_context, func) {\n      var newOptions = _extends({}, this.options, _context);\n\n      this.contexts.push(this.options);\n      this.options = newOptions;\n      var v = func();\n      this.options = this.contexts.pop();\n      return v;\n    }\n  }, {\n    key: 'escape',\n    value: function escape(value) {\n      // Escapes a string so it is valid within XML or XHTML\n      return value.replace(_constants.ESCAPE_RE, function (match) {\n        return _constants.ESCAPE_DICT[match];\n      });\n    }\n  }, {\n    key: 'linkify',\n    value: function linkify(value) {\n      return value.replace(_constants.URL_RE, function () {\n        var url = arguments.length <= 1 ? undefined : arguments[1];\n        var proto = arguments.length <= 2 ? undefined : arguments[2];\n\n        if (proto && ['http', 'https'].indexOf(proto) === -1) {\n          return url; // bad protocol, no linkify\n        }\n\n        var href = proto ? url : 'http://' + url;\n        return '<a href=\"' + href + '\" target=\"_blank\">' + url + '</a>';\n      });\n    }\n  }, {\n    key: 'strip',\n    value: function strip(text) {\n      return text.replace(/^\\s+|\\s+$/g, '');\n    }\n  }, {\n    key: 'cosmeticReplace',\n    value: function cosmeticReplace(value) {\n      return value.replace(_constants.COSMETIC_RE, function () {\n        var item = arguments.length <= 0 ? undefined : arguments[0];\n        return _constants.COSMETIC_DICT[item] || item;\n      });\n    }\n  }, {\n    key: 'htmlAttributes',\n    value: function htmlAttributes(attributes) {\n      if (!attributes) {\n        return '';\n      }\n\n      return Object.keys(attributes).map(function (k) {\n        return k + '=\"' + attributes[k] + '\"';\n      }).join(' ');\n    }\n  }]);\n\n  return Renderer;\n}();\n\nexports.default = Renderer;","map":null,"metadata":{},"sourceType":"script"}
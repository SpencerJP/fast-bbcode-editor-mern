{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _tag = require('../tag');\n\nvar _tag2 = _interopRequireDefault(_tag);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // https://github.com/vishnevskiy/bbcodejs/blob/master/src/coffee/tags.coffee\n\n\nvar CodeTag = function (_Tag) {\n  _inherits(CodeTag, _Tag);\n\n  function CodeTag(renderer) {\n    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, CodeTag);\n\n    var _this = _possibleConstructorReturn(this, (CodeTag.__proto__ || Object.getPrototypeOf(CodeTag)).call(this, renderer, settings));\n\n    _this.STRIP_INNER = true;\n    _this.inline = _this.params.code === 'inline';\n\n    if (!_this.inline) {\n      _this.STRIP_OUTER = true;\n    }\n\n    return _this;\n  }\n\n  _createClass(CodeTag, [{\n    key: 'toHTML',\n    value: function toHTML() {\n      if (this.inline) {\n        return ['<code>', this.getContent(true), '</code>'];\n      }\n\n      var lang = this.params.lang || this.params[this.name];\n\n      if (lang) {\n        return ['<pre class=\"prettyprint lang-' + lang + '\">', this.getContent(true), '</pre>'];\n      }\n\n      return ['<pre>', this.getContent(true), '</pre>'];\n    }\n  }, {\n    key: 'toReact',\n    value: function toReact() {\n      if (this.inline) {\n        return _react2.default.createElement('code', null, this.getContent(true));\n      }\n\n      var lang = this.params.lang || this.params[this.name];\n      var className = 'prettyprint';\n\n      if (lang) {\n        className += ' lang-' + lang;\n      }\n\n      return _react2.default.createElement('pre', {\n        className: className\n      }, this.getContent(true));\n    }\n  }]);\n\n  return CodeTag;\n}(_tag2.default);\n\nexports.default = CodeTag;","map":null,"metadata":{},"sourceType":"script"}
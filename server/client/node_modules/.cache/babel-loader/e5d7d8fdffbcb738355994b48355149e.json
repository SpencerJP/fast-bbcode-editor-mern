{"ast":null,"code":"import _slicedToArray from\"/var/www/redux-mern-landing/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from\"react\";// Hook\nexport function useWindowSize(){var isClient=typeof window===\"object\";function getSize(){return{width:isClient?window.innerWidth:undefined,height:isClient?window.innerHeight:undefined};}var _useState=useState(getSize),_useState2=_slicedToArray(_useState,2),windowSize=_useState2[0],setWindowSize=_useState2[1];useEffect(function(){if(!isClient){return false;}function handleResize(){setWindowSize(getSize());}window.addEventListener(\"resize\",handleResize);return function(){return window.removeEventListener(\"resize\",handleResize);};// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);// Empty array ensures that effect is only run on mount and unmount\nreturn windowSize;}","map":{"version":3,"sources":["/var/www/redux-mern-landing/server/client/src/hooks/useWindowSize.js"],"names":["useState","useEffect","useWindowSize","isClient","window","getSize","width","innerWidth","undefined","height","innerHeight","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener"],"mappings":"8GAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA;AACA,MAAO,SAASC,CAAAA,aAAT,EAAyB,CAC/B,GAAMC,CAAAA,QAAQ,CAAG,MAAOC,CAAAA,MAAP,GAAkB,QAAnC,CAEA,QAASC,CAAAA,OAAT,EAAmB,CAClB,MAAO,CACNC,KAAK,CAAEH,QAAQ,CAAGC,MAAM,CAACG,UAAV,CAAuBC,SADhC,CAENC,MAAM,CAAEN,QAAQ,CAAGC,MAAM,CAACM,WAAV,CAAwBF,SAFlC,CAAP,CAIA,CAR8B,cAUKR,QAAQ,CAACK,OAAD,CAVb,wCAUxBM,UAVwB,eAUZC,aAVY,eAY/BX,SAAS,CAAC,UAAM,CACf,GAAI,CAACE,QAAL,CAAe,CACd,MAAO,MAAP,CACA,CAED,QAASU,CAAAA,YAAT,EAAwB,CACvBD,aAAa,CAACP,OAAO,EAAR,CAAb,CACA,CAEDD,MAAM,CAACU,gBAAP,CAAwB,QAAxB,CAAkCD,YAAlC,EACA,MAAO,kBAAMT,CAAAA,MAAM,CAACW,mBAAP,CAA2B,QAA3B,CAAqCF,YAArC,CAAN,EAAP,CACA;AACA,CAZQ,CAYN,EAZM,CAAT,CAYO;AAEP,MAAOF,CAAAA,UAAP,CACA","sourcesContent":["import { useState, useEffect } from \"react\"\n\n// Hook\nexport function useWindowSize() {\n\tconst isClient = typeof window === \"object\"\n\n\tfunction getSize() {\n\t\treturn {\n\t\t\twidth: isClient ? window.innerWidth : undefined,\n\t\t\theight: isClient ? window.innerHeight : undefined,\n\t\t}\n\t}\n\n\tconst [windowSize, setWindowSize] = useState(getSize)\n\n\tuseEffect(() => {\n\t\tif (!isClient) {\n\t\t\treturn false\n\t\t}\n\n\t\tfunction handleResize() {\n\t\t\tsetWindowSize(getSize())\n\t\t}\n\n\t\twindow.addEventListener(\"resize\", handleResize)\n\t\treturn () => window.removeEventListener(\"resize\", handleResize)\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []) // Empty array ensures that effect is only run on mount and unmount\n\n\treturn windowSize\n}\n"]},"metadata":{},"sourceType":"module"}
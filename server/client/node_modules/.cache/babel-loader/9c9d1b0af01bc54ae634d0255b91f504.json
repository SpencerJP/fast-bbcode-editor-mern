{"ast":null,"code":"import _taggedTemplateLiteral from\"/var/www/redux-mern-landing/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n\\tbackground-color: #5c4949;\\n\\tpadding: 20px;\\n\\tborder-radius: 20px;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n\\t&&& {\\n\\t\\tpadding: 20px;\\n\\t\\tbackground-color: #222;\\n\\t\\t\",\"\\n\\t\\toverflow-y: scroll;\\n\\t}\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n\\t&&& {\\n\\t\\tpadding: 40px;\\n\\t\\tbackground-color: #222;\\n\\t\\tborder-radius: 13px;\\n\\t\\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n\\t\\t// \",\"\\n\\t}\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from\"react\";import CustomLoader from\"../components/common/CustomLoader\";import{Segment,Grid}from\"semantic-ui-react\";import DiscordAuth from\"../components/common/DiscordAuth\";import styled from\"styled-components\";import{useSelector,useDispatch}from\"react-redux\";import EditBox from\"../components/common/EditBox\";import{useWindowSize}from\"../hooks/useWindowSize\";import{fetchMOTD}from\"../redux/actions/messageActions\";var StyledSegmentInner=styled(Segment)(_templateObject(),function(props){return props.heightString;});var DataScroll=styled.div(_templateObject2(),function(props){return props.heightString;});var ExternalDiv=styled.div(_templateObject3());export default function MOTDScreen(props){var _useWindowSize=useWindowSize(),height=_useWindowSize.height;var rawBBCode=useSelector(function(state){return state.messageReducer.motd;});var isLoading=useSelector(function(state){return state.messageReducer.loadingStatusMotd;});var user=useSelector(function(state){return state.discordReducer.discordUserObject;});var dispatch=useDispatch();var rawBBCodeWithNewLines=rawBBCode;if(rawBBCode){rawBBCodeWithNewLines=rawBBCodeWithNewLines.replace(/\\n/g,\"[br][/br]\");}React.useEffect(function(){try{dispatch(fetchMOTD());}catch(err){console.error(err);}},[dispatch,props.parser]);if(user&&(user.id===\"290097917388128258\"||user.id===\"150623388036104192\")){return React.createElement(\"div\",{className:\"App\"},React.createElement(ExternalDiv,null,React.createElement(Grid,null,React.createElement(Grid.Row,null,React.createElement(Grid.Column,{width:10},React.createElement(StyledSegmentInner,{user:user},!isLoading?React.createElement(DataScroll,{heightString:\"height: \".concat(height-113,\"px;\")},props.parser.toReact(rawBBCodeWithNewLines)):React.createElement(CustomLoader,{style:{height:\"\".concat(height-100,\"px\")}}))),React.createElement(Grid.Column,{width:6},React.createElement(EditBox,null))),React.createElement(Grid.Row,null,React.createElement(DiscordAuth,null)))));}else{return React.createElement(\"div\",{className:\"App\"},React.createElement(ExternalDiv,null,React.createElement(StyledSegmentInner,{user:user},!isLoading?props.parser.toReact(rawBBCodeWithNewLines):React.createElement(CustomLoader,{style:{height:\"1000px\"}})),React.createElement(DiscordAuth,null)));}}","map":{"version":3,"sources":["/var/www/redux-mern-landing/server/client/src/container/MOTD.jsx"],"names":["React","CustomLoader","Segment","Grid","DiscordAuth","styled","useSelector","useDispatch","EditBox","useWindowSize","fetchMOTD","StyledSegmentInner","props","heightString","DataScroll","div","ExternalDiv","MOTDScreen","height","rawBBCode","state","messageReducer","motd","isLoading","loadingStatusMotd","user","discordReducer","discordUserObject","dispatch","rawBBCodeWithNewLines","replace","useEffect","err","console","error","parser","id","toReact"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport CustomLoader from \"../components/common/CustomLoader\"\nimport { Segment, Grid } from \"semantic-ui-react\"\nimport DiscordAuth from \"../components/common/DiscordAuth\"\nimport styled from \"styled-components\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport EditBox from \"../components/common/EditBox\"\nimport { useWindowSize } from \"../hooks/useWindowSize\"\nimport { fetchMOTD } from \"../redux/actions/messageActions\"\n\nconst StyledSegmentInner = styled(Segment)`\n\t&&& {\n\t\tpadding: 40px;\n\t\tbackground-color: #222;\n\t\tborder-radius: 13px;\n\t\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n\t\t// ${props => props.heightString}\n\t}\n`\n\nconst DataScroll = styled.div`\n\t&&& {\n\t\tpadding: 20px;\n\t\tbackground-color: #222;\n\t\t${props => props.heightString}\n\t\toverflow-y: scroll;\n\t}\n`\n\nconst ExternalDiv = styled.div`\n\tbackground-color: #5c4949;\n\tpadding: 20px;\n\tborder-radius: 20px;\n`\n\nexport default function MOTDScreen(props) {\n\tconst { height } = useWindowSize()\n\tconst rawBBCode = useSelector(state => state.messageReducer.motd)\n\tconst isLoading = useSelector(state => state.messageReducer.loadingStatusMotd)\n\tconst user = useSelector(state => state.discordReducer.discordUserObject)\n\tconst dispatch = useDispatch()\n\n\tlet rawBBCodeWithNewLines = rawBBCode\n\tif (rawBBCode) {\n\t\trawBBCodeWithNewLines = rawBBCodeWithNewLines.replace(/\\n/g, \"[br][/br]\")\n\t}\n\n\tReact.useEffect(() => {\n\t\ttry {\n\t\t\tdispatch(fetchMOTD())\n\t\t} catch (err) {\n\t\t\tconsole.error(err)\n\t\t}\n\t}, [dispatch, props.parser])\n\n\tif (\n\t\tuser &&\n\t\t(user.id === \"290097917388128258\" || user.id === \"150623388036104192\")\n\t) {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<ExternalDiv>\n\t\t\t\t\t<Grid>\n\t\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t\t<Grid.Column width={10}>\n\t\t\t\t\t\t\t\t<StyledSegmentInner user={user}>\n\t\t\t\t\t\t\t\t\t{!isLoading ? (\n\t\t\t\t\t\t\t\t\t\t<DataScroll heightString={`height: ${height - 113}px;`}>\n\t\t\t\t\t\t\t\t\t\t\t{props.parser.toReact(rawBBCodeWithNewLines)}\n\t\t\t\t\t\t\t\t\t\t</DataScroll>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<CustomLoader style={{ height: `${height - 100}px` }} />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</StyledSegmentInner>\n\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t\t<Grid.Column width={6}>\n\t\t\t\t\t\t\t\t<EditBox />\n\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t\t<DiscordAuth />\n\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t</Grid>\n\t\t\t\t</ExternalDiv>\n\t\t\t</div>\n\t\t)\n\t} else {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<ExternalDiv>\n\t\t\t\t\t<StyledSegmentInner user={user}>\n\t\t\t\t\t\t{!isLoading ? (\n\t\t\t\t\t\t\tprops.parser.toReact(rawBBCodeWithNewLines)\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<CustomLoader style={{ height: \"1000px\" }} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</StyledSegmentInner>\n\t\t\t\t\t<DiscordAuth />\n\t\t\t\t</ExternalDiv>\n\t\t\t</div>\n\t\t)\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}